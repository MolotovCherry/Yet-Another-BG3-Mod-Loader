name: Build

on:
  workflow_dispatch:
    inputs:
        release:
            description: 'Release'
            required: true
            default: false
            type: boolean
        release_mode:
          description: 'Release Mode'
          required: true
          default: false
          type: boolean
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions: write-all
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ (github.event_name == 'release' || inputs.release_mode || inputs.release) && 'prod' || 'dev' }}

      - name: Build Release
        if: github.event_name == 'release' || inputs.release_mode || inputs.release
        run: cargo build --release

      - name: Build Debug
        if: github.event_name != 'release' && !(inputs.release_mode || inputs.release)
        run: cargo build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            target/*/*.exe

      - name: Create staging folder
        if: github.event_name == 'release' || inputs.release
        run: |
          New-Item -ItemType Directory -Force -Path bin

      - name: Zip files up
        if: github.event_name == 'release' || inputs.release
        run: |
          Get-ChildItem -Path target/*/*.exe,assets/* | Copy-Item -Destination "bin"
          Compress-Archive -Path "bin" -CompressionLevel Optimal -DestinationPath "yet-another-bg3-mod-loader-x64.zip"
          Get-ChildItem -Path "bin" -Recurse | Remove-Item -Force

      - name: Attach assets to release
        if: github.event_name == 'release' || inputs.release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.zip"
          draft: false
          update_latest_release: true
